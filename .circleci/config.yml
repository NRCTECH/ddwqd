# PHP CircleCI 2.0 configuration file
# See: https://circleci.com/docs/2.0/language-php/
defaults: &defaults
  docker:
    - image: cimg/php:8.1.11

version: 2

jobs:
  install-php-extensions:
    <<: *defaults
    steps:
      - checkout
      - run: sudo apt update
      - run: sudo docker-php-ext-install zip

  setup-laravel-app:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: "Install composer dependencies"
          command: composer install -n --prefer-dist
      - save_cache:
          key: v1-dependencies-{{ checksum "composer.json" }}
          paths:
            - ./vendor
      - run:
          name: "Generate app key and storage link"
          command: |
            mv .env.pipelines .env
            php artisan key:generate
            chmod -R 777 storage bootstrap/cache
            php artisan storage:link

  run-static-analysis:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "composer.json" }}
            - v1-dependencies-

      - run:
          name: Run static analysis
          command: ./vendor/bin/phpstan analyze --memory-limit=1G

      - run:
          name: Run code style fixer
          command: ./vendor/bin/pint

  run-automated-tests:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "composer.json" }}
            - v1-dependencies-
      - run:
          name: "Generate app key"
          command: |
            mv .env.pipelines .env
            php artisan key:generate

      - run:
          name: "Create database and run migrations"
          env:
            DB_CONNECTION: sqlite
            DB_DATABASE: database/database.sqlite
          command: |
            touch database/database.sqlite
            php artisan migrate --env=testing
      - run:
          name: "Run automated tests"
          env:
            DB_CONNECTION: sqlite
            DB_DATABASE: database/database.sqlite
          command: ./vendor/bin/pest --parallel

workflows:
  version: 2
  build-setup-test:
    jobs:
      - install-php-extensions
      - setup-laravel-app:
          requires:
            - install-php-extensions
      - run-static-analysis:
          requires:
            - setup-laravel-app
      - run-automated-tests:
          requires:
            - run-static-analysis
